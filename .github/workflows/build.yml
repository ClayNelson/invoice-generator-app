name: Build macOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest-xlarge, macos-14]  # Intel and Apple Silicon
        include:
          - os: macos-latest-xlarge
            arch: intel
          - os: macos-14
            arch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Install Python and dependencies
      run: |
        brew update
        brew install python@3.10 gettext
        brew link gettext --force
        brew link python@3.10
        
        echo "Checking installations:"
        which python3
        python3 --version
        echo "Python path: $(which python3)"
        echo "Gettext path: $(brew --prefix gettext)"
        ls -la $(brew --prefix gettext)/lib/
        
        # Update PATH
        echo "$(brew --prefix python@3.10)/bin" >> $GITHUB_PATH
        echo "$(brew --prefix gettext)/bin" >> $GITHUB_PATH

    - name: Set up Python virtual environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
        python3 -m pip install pyinstaller

    - name: Build application
      run: |
        source venv/bin/activate
        pyinstaller --clean --windowed --name "InvoiceGenerator-${{ matrix.arch }}" invoice_app.py

    - name: Install the Apple certificate
      env:
        CERTIFICATE_BASE64: ${{ secrets.APPLE_DEVELOPER_ID_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.APPLE_DEVELOPER_ID_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ github.run_id }}
      run: |
        # Create keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        
        # Import certificate
        echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        
        # Allow codesign to access keychain
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
        
        # Clean up
        rm certificate.p12

    - name: Sign the app
      env:
        TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        cd dist
        codesign --force --options runtime --sign "Developer ID Application: Clay NELSON ($TEAM_ID)" "InvoiceGenerator-${{ matrix.arch }}.app"

    - name: Notarize the app
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_APP_PASSWORD: ${{ secrets.appleapppassword }}
      run: |
        cd dist
        # Create ZIP for notarization
        ditto -c -k --keepParent "InvoiceGenerator-${{ matrix.arch }}.app" "InvoiceGenerator-${{ matrix.arch }}-unnotarized.zip"
        
        # Submit for notarization
        xcrun notarytool submit "InvoiceGenerator-${{ matrix.arch }}-unnotarized.zip" \
          --apple-id "$APPLE_ID" \
          --password "$APPLE_APP_PASSWORD" \
          --team-id "$APPLE_TEAM_ID" \
          --wait
        
        # Staple the notarization ticket
        xcrun stapler staple "InvoiceGenerator-${{ matrix.arch }}.app"
        
        # Create final ZIP
        ditto -c -k --keepParent "InvoiceGenerator-${{ matrix.arch }}.app" "InvoiceGenerator-${{ matrix.arch }}.zip"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: InvoiceGenerator-${{ matrix.arch }}
        path: dist/InvoiceGenerator-${{ matrix.arch }}.zip
        
  create-release:
    needs: build-macos
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: |
          InvoiceGenerator-intel/*.zip
          InvoiceGenerator-arm64/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
